// <auto-generated />
using System;
using Government.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Government.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250419230349_seeddata")]
    partial class seeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Government.Entities.AdminResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponseText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.HasIndex("userId");

                    b.ToTable("AdminResponses", (string)null);
                });

            modelBuilder.Entity("Government.Entities.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "01954439-8011-7cca-9a77-c5bf8fae0bae",
                            ConcurrencyStamp = "01954439-8011-7cca-9a77-c5c08d1d3c39",
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Government.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "01954439-8011-7cca-9a77-c5c56990be36",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "01954439-8011-7cca-9a77-c5c6e1328a61",
                            Email = "Admin@GovernmentServices.com",
                            EmailConfirmed = true,
                            FirstName = "Government_Services",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GOVERNMENTSERVICES.COM",
                            NormalizedUserName = "ADMIN@GOVERNMENTSERVICES.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMAAAm5j8vUo112zWQjBQETUHX1NZ5gB17emHo8m/sx8WUjlbB45V3idqsevRyihFg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "01954439-8011-7cca-9a77-c5c75ebac097",
                            TwoFactorEnabled = false,
                            UserName = "Admin@GovernmentServices.com"
                        });
                });

            modelBuilder.Entity("Government.Entities.AttachedDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("AttachedDocuments", (string)null);
                });

            modelBuilder.Entity("Government.Entities.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HtmlType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fields", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "أدخل رقم جواز السفر الحالي.",
                            FieldName = "رقم جواز السفر الحالي",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 2,
                            Description = "أدخل رقم جواز السفر السابق (إن وجد).",
                            FieldName = "رقم جواز السفر السابق",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 3,
                            Description = "أدخل تاريخ إصدار الجواز الحالي.",
                            FieldName = "تاريخ إصدار الجواز",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 4,
                            Description = "أدخل تاريخ انتهاء الجواز الحالي.",
                            FieldName = "تاريخ انتهاء الجواز",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 5,
                            Description = "أدخل مكان إصدار الجواز.",
                            FieldName = "جهة إصدار الجواز",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 6,
                            Description = "أدخل اسمك باللغة الإنجليزية كما في الجواز.",
                            FieldName = "الاسم باللغة الإنجليزية",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 7,
                            Description = "أدخل رقم إيصال دفع رسوم التجديد.",
                            FieldName = "رقم تأكيد الدفع",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 8,
                            Description = "أدخل جنسك (ذكر/أنثى).",
                            FieldName = "الجنس",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 9,
                            Description = "أدخل مهنتك الحالية.",
                            FieldName = "المهنة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 10,
                            Description = "أدخل رقم الموعد لاستلام الجواز.",
                            FieldName = "رقم الموعد",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 11,
                            Description = "أدخل نوع الرخصة (خاصة/تجارية).",
                            FieldName = "نوع رخصة القيادة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 12,
                            Description = "أدخل رقم ملفك المروري (إن وجد).",
                            FieldName = "رقم الملف المروري",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 13,
                            Description = "أدخل تاريخ اجتياز اختبار القيادة.",
                            FieldName = "تاريخ اجتياز الاختبار",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 14,
                            Description = "أدخل اسم مدرسة تدريب القيادة.",
                            FieldName = "اسم مدرسة القيادة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 15,
                            Description = "أدخل رقم شهادة اللياقة الطبية.",
                            FieldName = "رقم شهادة اللياقة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 16,
                            Description = "أدخل المحافظة التي ستصدر منها الرخصة.",
                            FieldName = "المحافظة المصدرة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 17,
                            Description = "أدخل تاريخ تقديم طلب الرخصة.",
                            FieldName = "تاريخ التقديم للرخصة",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 18,
                            Description = "أدخل رقم إيصال دفع رسوم الرخصة.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 19,
                            Description = "أدخل نوع المركبة (سيارة/دراجة).",
                            FieldName = "نوع المركبة المطلوبة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 20,
                            Description = "أدخل حالة رخصتك السابقة (إن وجدت).",
                            FieldName = "حالة الرخصة السابقة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 21,
                            Description = "أدخل رقم لوحة المركبة.",
                            FieldName = "رقم لوحة المركبة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 22,
                            Description = "أدخل رقم الشاسيه الخاص بالمركبة.",
                            FieldName = "رقم الشاسيه",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 23,
                            Description = "أدخل رقم الموتور الخاص بالمركبة.",
                            FieldName = "رقم الموتور",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 24,
                            Description = "أدخل نوع المركبة (سيارة/شاحنة).",
                            FieldName = "نوع المركبة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 25,
                            Description = "أدخل سنة تصنيع المركبة.",
                            FieldName = "سنة الصنع",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 26,
                            Description = "أدخل رقم وثيقة التأمين على المركبة.",
                            FieldName = "رقم التأمين",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 27,
                            Description = "أدخل تاريخ تسجيل المركبة.",
                            FieldName = "تاريخ التسجيل",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 28,
                            Description = "أدخل اسم الوكيل أو البائع.",
                            FieldName = "اسم الوكيل",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 29,
                            Description = "أدخل رقم فاتورة شراء المركبة.",
                            FieldName = "رقم الفاتورة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 30,
                            Description = "أدخل لون المركبة.",
                            FieldName = "لون المركبة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 31,
                            Description = "أدخل اسم الزوج الكامل.",
                            FieldName = "اسم الزوج",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 32,
                            Description = "أدخل اسم الزوجة الكامل.",
                            FieldName = "اسم الزوجة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 33,
                            Description = "أدخل تاريخ عقد الزواج.",
                            FieldName = "تاريخ الزواج",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 34,
                            Description = "أدخل مكان عقد الزواج.",
                            FieldName = "مكان الزواج",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 35,
                            Description = "أدخل رقم عقد الزواج.",
                            FieldName = "رقم عقد الزواج",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 36,
                            Description = "أدخل اسم المأذون الذي أجرى العقد.",
                            FieldName = "اسم المأذون",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 37,
                            Description = "أدخل عدد الشهود على العقد.",
                            FieldName = "عدد الشهود",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 38,
                            Description = "أدخل تاريخ تسجيل العقد رسميًا.",
                            FieldName = "تاريخ التسجيل",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 39,
                            Description = "أدخل رقم إيصال دفع رسوم الشهادة.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 40,
                            Description = "أدخل محل إقامة الزوجين.",
                            FieldName = "محل إقامة الزوجين",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 41,
                            Description = "أدخل اسم المولود الكامل.",
                            FieldName = "اسم المولود",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 42,
                            Description = "أدخل تاريخ ميلاد المولود.",
                            FieldName = "تاريخ الميلاد",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 43,
                            Description = "أدخل مكان ميلاد المولود.",
                            FieldName = "محل الميلاد",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 44,
                            Description = "أدخل اسم المستشفى أو مكان الولادة.",
                            FieldName = "اسم المستشفى",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 45,
                            Description = "أدخل رقم تسجيل الميلاد.",
                            FieldName = "رقم تسجيل الميلاد",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 46,
                            Description = "أدخل جنس المولود (ذكر/أنثى).",
                            FieldName = "جنس المولود",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 47,
                            Description = "أدخل اسم الطبيب المشرف على الولادة.",
                            FieldName = "اسم الطبيب",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 48,
                            Description = "أدخل تاريخ إصدار الشهادة.",
                            FieldName = "تاريخ الإصدار",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 49,
                            Description = "أدخل رقم إيصال دفع رسوم الشهادة.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 50,
                            Description = "أدخل اسم مقدم طلب الشهادة.",
                            FieldName = "اسم مقدم الطلب",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 51,
                            Description = "أدخل رقم شهادة الميلاد.",
                            FieldName = "رقم شهادة الميلاد",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 52,
                            Description = "أدخل تاريخ تقديم طلب البطاقة.",
                            FieldName = "تاريخ تقديم الطلب",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 53,
                            Description = "أدخل رقم الموعد لاستلام البطاقة.",
                            FieldName = "رقم الموعد",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 54,
                            Description = "أدخل مكان إصدار البطاقة.",
                            FieldName = "محل الإصدار",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 55,
                            Description = "أدخل رقم تسجيل البصمة (إن وجد).",
                            FieldName = "رقم البصمة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 56,
                            Description = "أدخل اسم الأب الكامل.",
                            FieldName = "اسم الأب",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 57,
                            Description = "أدخل اسم الأم الكامل.",
                            FieldName = "اسم الأم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 58,
                            Description = "أدخل جنسك (ذكر/أنثى).",
                            FieldName = "الجنس",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 59,
                            Description = "أدخل رقم إيصال دفع رسوم البطاقة.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 60,
                            Description = "أدخل حالتك الاجتماعية.",
                            FieldName = "الحالة الاجتماعية",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 61,
                            Description = "أدخل اسم النشاط التجاري.",
                            FieldName = "اسم النشاط التجاري",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 62,
                            Description = "أدخل نوع النشاط (تجاري/صناعي).",
                            FieldName = "نوع النشاط",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 63,
                            Description = "أدخل قيمة رأس المال المسجل.",
                            FieldName = "رأس المال",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 64,
                            Description = "أدخل رقم التسجيل الضريبي.",
                            FieldName = "رقم التسجيل الضريبي",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 65,
                            Description = "أدخل عدد الموظفين في النشاط.",
                            FieldName = "عدد الموظفين",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 66,
                            Description = "أدخل تاريخ بدء النشاط التجاري.",
                            FieldName = "تاريخ بدء النشاط",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 67,
                            Description = "أدخل عنوان المقر التجاري.",
                            FieldName = "عنوان المقر",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 68,
                            Description = "أدخل رقم السجل التجاري (إن وجد).",
                            FieldName = "رقم السجل التجاري",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 69,
                            Description = "أدخل اسم مالك النشاط.",
                            FieldName = "اسم المالك",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 70,
                            Description = "أدخل رقم إيصال دفع رسوم التسجيل.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 71,
                            Description = "أدخل رقم جواز السفر.",
                            FieldName = "رقم جواز السفر",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 72,
                            Description = "أدخل جنسيتك.",
                            FieldName = "الجنسية",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 73,
                            Description = "أدخل اسم جهة العمل في مصر.",
                            FieldName = "اسم جهة العمل",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 74,
                            Description = "أدخل عنوان جهة العمل.",
                            FieldName = "عنوان جهة العمل",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 75,
                            Description = "أدخل مدة عقد العمل (بالأشهر).",
                            FieldName = "مدة العقد",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 76,
                            Description = "أدخل أعلى مؤهل دراسي حصلت عليه.",
                            FieldName = "المؤهل الدراسي",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 77,
                            Description = "أدخل تاريخ بدء العمل.",
                            FieldName = "تاريخ بدء العمل",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 78,
                            Description = "أدخل رقم التأشيرة (إن وجد).",
                            FieldName = "رقم التأشيرة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 79,
                            Description = "أدخل اسم المسؤول في جهة العمل.",
                            FieldName = "اسم المسؤول",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 80,
                            Description = "أدخل رقم إيصال دفع رسوم التصريح.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 81,
                            Description = "أدخل رقم تصريح الإقامة الحالي.",
                            FieldName = "رقم تصريح الإقامة الحالي",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 82,
                            Description = "أدخل تاريخ انتهاء الإقامة الحالية.",
                            FieldName = "تاريخ انتهاء الإقامة",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 83,
                            Description = "أدخل سبب الإقامة (عمل/دراسة).",
                            FieldName = "سبب الإقامة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 84,
                            Description = "أدخل مدة الإقامة المطلوبة (بالأشهر).",
                            FieldName = "مدة الإقامة المطلوبة",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 85,
                            Description = "أدخل اسم الكفيل (إن وجد).",
                            FieldName = "اسم الكفيل",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 86,
                            Description = "أدخل عنوان السكن في مصر.",
                            FieldName = "عنوان السكن",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 87,
                            Description = "أدخل رقم جواز السفر.",
                            FieldName = "رقم جواز السفر",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 88,
                            Description = "أدخل تاريخ تقديم طلب التجديد.",
                            FieldName = "تاريخ التقديم",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 89,
                            Description = "أدخل رقم إيصال دفع رسوم التجديد.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 90,
                            Description = "أدخل جنسيتك.",
                            FieldName = "الجنسية",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 91,
                            Description = "أدخل نوع الضريبة (دخل/قيمة مضافة).",
                            FieldName = "نوع الضريبة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 92,
                            Description = "أدخل تقدير دخلك السنوي.",
                            FieldName = "الدخل السنوي",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 93,
                            Description = "أدخل رقم حسابك البنكي.",
                            FieldName = "رقم الحساب البنكي",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 94,
                            Description = "أدخل اسم النشاط التجاري.",
                            FieldName = "اسم النشاط التجاري",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 95,
                            Description = "أدخل رقم السجل التجاري.",
                            FieldName = "رقم السجل التجاري",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 96,
                            Description = "أدخل تاريخ التسجيل الضريبي.",
                            FieldName = "تاريخ التسجيل",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 97,
                            Description = "أدخل عنوان النشاط الضريبي.",
                            FieldName = "عنوان النشاط",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 98,
                            Description = "أدخل رقم إيصال دفع رسوم التسجيل.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 99,
                            Description = "أدخل اسم المحاسب القانوني (إن وجد).",
                            FieldName = "اسم المحاسب",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 100,
                            Description = "أدخل رقم التسجيل الضريبي السابق (إن وجد).",
                            FieldName = "رقم التسجيل السابق",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 101,
                            Description = "أدخل اسم المتوفى الكامل.",
                            FieldName = "اسم المتوفى",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 102,
                            Description = "أدخل تاريخ الوفاة.",
                            FieldName = "تاريخ الوفاة",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 103,
                            Description = "أدخل مكان الوفاة.",
                            FieldName = "مكان الوفاة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 104,
                            Description = "أدخل رقم تسجيل الوفاة.",
                            FieldName = "رقم تسجيل الوفاة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 105,
                            Description = "أدخل علاقتك بالمتوفى.",
                            FieldName = "العلاقة بالمتوفى",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 106,
                            Description = "أدخل اسم المقبرة أو مكان الدفن.",
                            FieldName = "اسم المقبرة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 107,
                            Description = "أدخل تاريخ الدفن.",
                            FieldName = "تاريخ الدفن",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 108,
                            Description = "أدخل رقم إيصال دفع رسوم الشهادة.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 109,
                            Description = "أدخل اسم مقدم الطلب.",
                            FieldName = "اسم مقدم الطلب",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 110,
                            Description = "أدخل سبب الوفاة (إن وجد).",
                            FieldName = "سبب الوفاة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 111,
                            Description = "أدخل رقم السجل التجاري الحالي.",
                            FieldName = "رقم السجل التجاري الحالي",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 112,
                            Description = "أدخل تاريخ انتهاء السجل الحالي.",
                            FieldName = "تاريخ انتهاء السجل",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 113,
                            Description = "أدخل قيمة رأس المال المحدث.",
                            FieldName = "رأس المال المحدث",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 114,
                            Description = "أدخل عدد الموظفين الحالي.",
                            FieldName = "عدد الموظفين المحدث",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 115,
                            Description = "أدخل اسم النشاط التجاري.",
                            FieldName = "اسم النشاط التجاري",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 116,
                            Description = "أدخل عنوان المقر التجاري المحدث.",
                            FieldName = "عنوان المقر المحدث",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 117,
                            Description = "أدخل رقم التسجيل الضريبي.",
                            FieldName = "رقم التسجيل الضريبي",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 118,
                            Description = "أدخل تاريخ تقديم طلب التجديد.",
                            FieldName = "تاريخ التجديد",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 119,
                            Description = "أدخل رقم إيصال دفع رسوم التجديد.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 120,
                            Description = "أدخل اسم مالك النشاط.",
                            FieldName = "اسم المالك",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 121,
                            Description = "أدخل الغرض من استخراج الشهادة.",
                            FieldName = "الغرض من الشهادة",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 122,
                            Description = "أدخل تاريخ تقديم طلب الشهادة.",
                            FieldName = "تاريخ التقديم",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 123,
                            Description = "أدخل مكان إصدار الشهادة.",
                            FieldName = "محل الإصدار",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 124,
                            Description = "أدخل رقم الموعد لاستلام الشهادة.",
                            FieldName = "رقم الموعد",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 125,
                            Description = "أدخل اسم الأب الكامل.",
                            FieldName = "اسم الأب",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 126,
                            Description = "أدخل اسم الأم الكامل.",
                            FieldName = "اسم الأم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 127,
                            Description = "أدخل رقم إيصال دفع رسوم الشهادة.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 128,
                            Description = "أدخل جنسك (ذكر/أنثى).",
                            FieldName = "الجنس",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 129,
                            Description = "أدخل تاريخ ميلادك.",
                            FieldName = "تاريخ الميلاد",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 130,
                            Description = "أدخل مكان ميلادك.",
                            FieldName = "محل الميلاد",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 131,
                            Description = "أدخل عنوان العقار بالتفصيل.",
                            FieldName = "عنوان العقار",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 132,
                            Description = "أدخل رقم عقد الملكية.",
                            FieldName = "رقم العقد",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 133,
                            Description = "أدخل نوع العقار (شقة/أرض).",
                            FieldName = "نوع العقار",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 134,
                            Description = "أدخل مساحة العقار بالمتر المربع.",
                            FieldName = "مساحة العقار",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 135,
                            Description = "أدخل تاريخ شراء العقار.",
                            FieldName = "تاريخ الشراء",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 136,
                            Description = "أدخل اسم البائع في العقد.",
                            FieldName = "اسم البائع",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 137,
                            Description = "أدخل رقم الخريطة المساحية.",
                            FieldName = "رقم الخريطة المساحية",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 138,
                            Description = "أدخل رقم إيصال دفع رسوم التسجيل.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 139,
                            Description = "أدخل اسم مالك العقار.",
                            FieldName = "اسم المالك",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 140,
                            Description = "أدخل القيمة المالية للعقار.",
                            FieldName = "قيمة العقار",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 141,
                            Description = "أدخل عدد أفراد الأسرة.",
                            FieldName = "عدد أفراد الأسرة",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 142,
                            Description = "أدخل تقدير دخلك الشهري.",
                            FieldName = "الدخل الشهري",
                            HtmlType = "number"
                        },
                        new
                        {
                            Id = 143,
                            Description = "أدخل رقم بطاقة التموين (إن وجد).",
                            FieldName = "رقم بطاقة التموين الحالية",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 144,
                            Description = "أدخل اسم المخبز المفضل للتوزيع.",
                            FieldName = "اسم المخبز المفضل",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 145,
                            Description = "أدخل تاريخ تقديم طلب الدعم.",
                            FieldName = "تاريخ التقديم",
                            HtmlType = "date"
                        },
                        new
                        {
                            Id = 146,
                            Description = "أدخل رقم إيصال دفع رسوم التقديم.",
                            FieldName = "رقم إيصال الرسوم",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 147,
                            Description = "أدخل اسم مقدم الطلب.",
                            FieldName = "اسم مقدم الطلب",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 148,
                            Description = "أدخل حالتك الاجتماعية.",
                            FieldName = "الحالة الاجتماعية",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 149,
                            Description = "أدخل عنوان السكن الحالي.",
                            FieldName = "عنوان السكن",
                            HtmlType = "text"
                        },
                        new
                        {
                            Id = 150,
                            Description = "أدخل رقم الحساب البنكي (إن وجد).",
                            FieldName = "رقم الحساب البنكي",
                            HtmlType = "text"
                        });
                });

            modelBuilder.Entity("Government.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("Government.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("ResponseStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("No Response");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Requests", (string)null);
                });

            modelBuilder.Entity("Government.Entities.RequiredDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.HasIndex("ServiceId");

                    b.ToTable("RequiredDocuments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A copy of a valid passport to verify identity.",
                            DocumentType = "Identification",
                            FileName = "Passport Copy",
                            FileUrl = "https://gov.com/docs/passport_copy.pdf",
                            IsMandatory = true,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "A copy of the previous passport, if applicable, for verification.",
                            DocumentType = "Previous Document",
                            FileName = "Old Passport",
                            FileUrl = "https://gov.com/docs/old_passport.pdf",
                            IsMandatory = true,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "A scanned copy of the national ID card for identity confirmation.",
                            DocumentType = "Identification",
                            FileName = "National ID Copy",
                            FileUrl = "https://gov.com/docs/national_id.pdf",
                            IsMandatory = true,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "A medical certificate proving health status, issued by an authorized medical institution.",
                            DocumentType = "Health",
                            FileName = "Medical Certificate",
                            FileUrl = "https://gov.com/docs/medical_certificate.pdf",
                            IsMandatory = true,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "An official document proving ownership of the vehicle.",
                            DocumentType = "Ownership Proof",
                            FileName = "Vehicle Title",
                            FileUrl = "https://gov.com/docs/vehicle_title.pdf",
                            IsMandatory = true,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "A valid insurance certificate covering the vehicle.",
                            DocumentType = "Insurance",
                            FileName = "Insurance Certificate",
                            FileUrl = "https://gov.com/docs/insurance.pdf",
                            IsMandatory = true,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 7,
                            Description = "A certified copy of the marriage contract for legal purposes.",
                            DocumentType = "Legal",
                            FileName = "Marriage Contract",
                            FileUrl = "https://gov.com/docs/marriage_contract.pdf",
                            IsMandatory = true,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 8,
                            Description = "Copies of the national ID cards of both spouses for verification.",
                            DocumentType = "Identification",
                            FileName = "National ID Copies",
                            FileUrl = "https://gov.com/docs/nid_copies.pdf",
                            IsMandatory = true,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 9,
                            Description = "An official hospital birth record confirming birth details.",
                            DocumentType = "Medical",
                            FileName = "Hospital Birth Record",
                            FileUrl = "https://gov.com/docs/birth_record.pdf",
                            IsMandatory = true,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 10,
                            Description = "Copies of both parents' national ID cards for identity verification.",
                            DocumentType = "Identification",
                            FileName = "Parents ID Copies",
                            FileUrl = "https://gov.com/docs/parents_id.pdf",
                            IsMandatory = true,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 11,
                            Description = "A certified copy of the birth certificate for identity confirmation.",
                            DocumentType = "Identification",
                            FileName = "Birth Certificate",
                            FileUrl = "https://gov.com/docs/birth_certificate.pdf",
                            IsMandatory = true,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 12,
                            Description = "An official document verifying the applicant's residential address.",
                            DocumentType = "Address Verification",
                            FileName = "Proof of Residence",
                            FileUrl = "https://gov.com/docs/proof_residence.pdf",
                            IsMandatory = true,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 13,
                            Description = "An official business registration document confirming legal status.",
                            DocumentType = "Legal",
                            FileName = "Business Registration Form",
                            FileUrl = "https://gov.com/docs/business_registration.pdf",
                            IsMandatory = true,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 14,
                            Description = "A tax clearance certificate proving tax compliance.",
                            DocumentType = "Tax",
                            FileName = "Tax Clearance Certificate",
                            FileUrl = "https://gov.com/docs/tax_clearance.pdf",
                            IsMandatory = true,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 15,
                            Description = "A signed employment contract detailing job terms and conditions.",
                            DocumentType = "Legal",
                            FileName = "Employment Contract",
                            FileUrl = "https://gov.com/docs/employment_contract.pdf",
                            IsMandatory = true,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 16,
                            Description = "An official company license issued by the regulatory authority.",
                            DocumentType = "Business",
                            FileName = "Company License",
                            FileUrl = "https://gov.com/docs/company_license.pdf",
                            IsMandatory = true,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 17,
                            Description = "A copy of the residency card confirming residency status.",
                            DocumentType = "Identification",
                            FileName = "Residency Card Copy",
                            FileUrl = "https://gov.com/docs/residency_card.pdf",
                            IsMandatory = true,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 18,
                            Description = "A valid rental agreement proving residency at the stated address.",
                            DocumentType = "Proof of Address",
                            FileName = "Rental Agreement",
                            FileUrl = "https://gov.com/docs/rental_agreement.pdf",
                            IsMandatory = true,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 19,
                            Description = "A completed tax application form for tax registration.",
                            DocumentType = "Tax",
                            FileName = "Tax Application Form",
                            FileUrl = "https://gov.com/docs/tax_application.pdf",
                            IsMandatory = true,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 20,
                            Description = "An official document proving the applicant's income source.",
                            DocumentType = "Financial",
                            FileName = "Proof of Income",
                            FileUrl = "https://gov.com/docs/proof_income.pdf",
                            IsMandatory = true,
                            ServiceId = 10
                        });
                });

            modelBuilder.Entity("Government.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("ProcessingTime")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceDescription")
                        .IsUnique();

                    b.HasIndex("ServiceName")
                        .IsUnique();

                    b.ToTable("Services", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactInfo = "passports@moe.gov.eg",
                            Fee = 1000.00m,
                            IsAvailable = true,
                            ProcessingTime = "5 أيام عمل",
                            ServiceDescription = "تجديد جواز السفر المصري بسهولة وسرعة.",
                            ServiceName = "تجديد جواز السفر",
                            category = ""
                        },
                        new
                        {
                            Id = 2,
                            ContactInfo = "traffic@moi.gov.eg",
                            Fee = 300.00m,
                            IsAvailable = true,
                            ProcessingTime = "7 أيام عمل",
                            ServiceDescription = "التقديم للحصول على رخصة قيادة جديدة.",
                            ServiceName = "إصدار رخصة قيادة",
                            category = ""
                        },
                        new
                        {
                            Id = 3,
                            ContactInfo = "vehicles@moi.gov.eg",
                            Fee = 500.00m,
                            IsAvailable = true,
                            ProcessingTime = "3 أيام عمل",
                            ServiceDescription = "تسجيل مركبتك لدى إدارة المرور.",
                            ServiceName = "تسجيل مركبة",
                            category = ""
                        },
                        new
                        {
                            Id = 4,
                            ContactInfo = "civil@moj.gov.eg",
                            Fee = 150.00m,
                            IsAvailable = true,
                            ProcessingTime = "4 أيام عمل",
                            ServiceDescription = "طلب شهادة زواج رسمية من السجل المدني.",
                            ServiceName = "إصدار شهادة زواج",
                            category = ""
                        },
                        new
                        {
                            Id = 5,
                            ContactInfo = "birth@moj.gov.eg",
                            Fee = 100.00m,
                            IsAvailable = true,
                            ProcessingTime = "2 يوم عمل",
                            ServiceDescription = "استخراج شهادة ميلاد رسمية.",
                            ServiceName = "إصدار شهادة ميلاد",
                            category = ""
                        },
                        new
                        {
                            Id = 6,
                            ContactInfo = "id@moe.gov.eg",
                            Fee = 150.00m,
                            IsAvailable = true,
                            ProcessingTime = "6 أيام عمل",
                            ServiceDescription = "طلب إصدار بطاقة رقم قومي جديدة.",
                            ServiceName = "التقديم لبطاقة الرقم القومي",
                            category = ""
                        },
                        new
                        {
                            Id = 7,
                            ContactInfo = "commerce@mit.gov.eg",
                            Fee = 2000.00m,
                            IsAvailable = true,
                            ProcessingTime = "10 أيام عمل",
                            ServiceDescription = "تسجيل عملك التجاري بشكل قانوني.",
                            ServiceName = "تسجيل رخصة تجارية",
                            category = ""
                        },
                        new
                        {
                            Id = 8,
                            ContactInfo = "labor@mol.gov.eg",
                            Fee = 1500.00m,
                            IsAvailable = true,
                            ProcessingTime = "8 أيام عمل",
                            ServiceDescription = "التقديم لتصريح عمل للأجانب.",
                            ServiceName = "إصدار تصريح عمل",
                            category = ""
                        },
                        new
                        {
                            Id = 9,
                            ContactInfo = "immigration@moe.gov.eg",
                            Fee = 1200.00m,
                            IsAvailable = true,
                            ProcessingTime = "7 أيام عمل",
                            ServiceDescription = "تجديد تصريح الإقامة للمقيمين.",
                            ServiceName = "تجديد تصريح الإقامة",
                            category = ""
                        },
                        new
                        {
                            Id = 10,
                            ContactInfo = "tax@mof.gov.eg",
                            Fee = 400.00m,
                            IsAvailable = true,
                            ProcessingTime = "5 أيام عمل",
                            ServiceDescription = "التسجيل لأغراض الضرائب.",
                            ServiceName = "التسجيل الضريبي",
                            category = ""
                        },
                        new
                        {
                            Id = 11,
                            ContactInfo = "death@moj.gov.eg",
                            Fee = 100.00m,
                            IsAvailable = true,
                            ProcessingTime = "2 يوم عمل",
                            ServiceDescription = "طلب شهادة وفاة رسمية.",
                            ServiceName = "استخراج شهادة وفاة",
                            category = ""
                        },
                        new
                        {
                            Id = 12,
                            ContactInfo = "registry@mit.gov.eg",
                            Fee = 1000.00m,
                            IsAvailable = true,
                            ProcessingTime = "7 أيام عمل",
                            ServiceDescription = "تجديد السجل التجاري للشركات.",
                            ServiceName = "تجديد السجل التجاري",
                            category = ""
                        },
                        new
                        {
                            Id = 13,
                            ContactInfo = "cert@moi.gov.eg",
                            Fee = 200.00m,
                            IsAvailable = true,
                            ProcessingTime = "3 أيام عمل",
                            ServiceDescription = "استخراج شهادة حسن سير وسلوك.",
                            ServiceName = "إصدار شهادة حسن سير وسلوك",
                            category = ""
                        },
                        new
                        {
                            Id = 14,
                            ContactInfo = "property@moj.gov.eg",
                            Fee = 1500.00m,
                            IsAvailable = true,
                            ProcessingTime = "10 أيام عمل",
                            ServiceDescription = "تسجيل ملكية عقار في الشهر العقاري.",
                            ServiceName = "تسجيل عقار",
                            category = ""
                        },
                        new
                        {
                            Id = 15,
                            ContactInfo = "supply@moss.gov.eg",
                            Fee = 50.00m,
                            IsAvailable = true,
                            ProcessingTime = "5 أيام عمل",
                            ServiceDescription = "التسجيل للحصول على بطاقة تموين.",
                            ServiceName = "التقديم للحصول على دعم تمويني",
                            category = ""
                        });
                });

            modelBuilder.Entity("Government.Entities.ServiceData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FieldValueDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("FieldValueFloat")
                        .HasColumnType("real");

                    b.Property<int?>("FieldValueInt")
                        .HasColumnType("int");

                    b.Property<string>("FieldValueString")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("RequestId");

                    b.ToTable("ServiceData", (string)null);
                });

            modelBuilder.Entity("Government.Entities.ServiceField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceFields", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FieldId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            FieldId = 2,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 3,
                            FieldId = 3,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 4,
                            FieldId = 4,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 5,
                            FieldId = 5,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 6,
                            FieldId = 6,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 7,
                            FieldId = 7,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 8,
                            FieldId = 8,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 9,
                            FieldId = 9,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 10,
                            FieldId = 10,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 11,
                            FieldId = 11,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 12,
                            FieldId = 12,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 13,
                            FieldId = 13,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 14,
                            FieldId = 14,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 15,
                            FieldId = 15,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 16,
                            FieldId = 16,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 17,
                            FieldId = 17,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 18,
                            FieldId = 18,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 19,
                            FieldId = 19,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 20,
                            FieldId = 20,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 21,
                            FieldId = 21,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 22,
                            FieldId = 22,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 23,
                            FieldId = 23,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 24,
                            FieldId = 24,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 25,
                            FieldId = 25,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 26,
                            FieldId = 26,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 27,
                            FieldId = 27,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 28,
                            FieldId = 28,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 29,
                            FieldId = 29,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 30,
                            FieldId = 30,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 31,
                            FieldId = 31,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 32,
                            FieldId = 32,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 33,
                            FieldId = 33,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 34,
                            FieldId = 34,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 35,
                            FieldId = 35,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 36,
                            FieldId = 36,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 37,
                            FieldId = 37,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 38,
                            FieldId = 38,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 39,
                            FieldId = 39,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 40,
                            FieldId = 40,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 41,
                            FieldId = 41,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 42,
                            FieldId = 42,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 43,
                            FieldId = 43,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 44,
                            FieldId = 44,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 45,
                            FieldId = 45,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 46,
                            FieldId = 46,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 47,
                            FieldId = 47,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 48,
                            FieldId = 48,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 49,
                            FieldId = 49,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 50,
                            FieldId = 50,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 51,
                            FieldId = 51,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 52,
                            FieldId = 52,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 53,
                            FieldId = 53,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 54,
                            FieldId = 54,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 55,
                            FieldId = 55,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 56,
                            FieldId = 56,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 57,
                            FieldId = 57,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 58,
                            FieldId = 58,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 59,
                            FieldId = 59,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 60,
                            FieldId = 60,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 61,
                            FieldId = 61,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 62,
                            FieldId = 62,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 63,
                            FieldId = 63,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 64,
                            FieldId = 64,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 65,
                            FieldId = 65,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 66,
                            FieldId = 66,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 67,
                            FieldId = 67,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 68,
                            FieldId = 68,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 69,
                            FieldId = 69,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 70,
                            FieldId = 70,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 71,
                            FieldId = 71,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 72,
                            FieldId = 72,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 73,
                            FieldId = 73,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 74,
                            FieldId = 74,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 75,
                            FieldId = 75,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 76,
                            FieldId = 76,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 77,
                            FieldId = 77,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 78,
                            FieldId = 78,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 79,
                            FieldId = 79,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 80,
                            FieldId = 80,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 81,
                            FieldId = 81,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 82,
                            FieldId = 82,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 83,
                            FieldId = 83,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 84,
                            FieldId = 84,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 85,
                            FieldId = 85,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 86,
                            FieldId = 86,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 87,
                            FieldId = 87,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 88,
                            FieldId = 88,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 89,
                            FieldId = 89,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 90,
                            FieldId = 90,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 91,
                            FieldId = 91,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 92,
                            FieldId = 92,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 93,
                            FieldId = 93,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 94,
                            FieldId = 94,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 95,
                            FieldId = 95,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 96,
                            FieldId = 96,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 97,
                            FieldId = 97,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 98,
                            FieldId = 98,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 99,
                            FieldId = 99,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 100,
                            FieldId = 100,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 101,
                            FieldId = 101,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 102,
                            FieldId = 102,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 103,
                            FieldId = 103,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 104,
                            FieldId = 104,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 105,
                            FieldId = 105,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 106,
                            FieldId = 106,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 107,
                            FieldId = 107,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 108,
                            FieldId = 108,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 109,
                            FieldId = 109,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 110,
                            FieldId = 110,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 111,
                            FieldId = 111,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 112,
                            FieldId = 112,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 113,
                            FieldId = 113,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 114,
                            FieldId = 114,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 115,
                            FieldId = 115,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 116,
                            FieldId = 116,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 117,
                            FieldId = 117,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 118,
                            FieldId = 118,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 119,
                            FieldId = 119,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 120,
                            FieldId = 120,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 121,
                            FieldId = 121,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 122,
                            FieldId = 122,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 123,
                            FieldId = 123,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 124,
                            FieldId = 124,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 125,
                            FieldId = 125,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 126,
                            FieldId = 126,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 127,
                            FieldId = 127,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 128,
                            FieldId = 128,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 129,
                            FieldId = 129,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 130,
                            FieldId = 130,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 131,
                            FieldId = 131,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 132,
                            FieldId = 132,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 133,
                            FieldId = 133,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 134,
                            FieldId = 134,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 135,
                            FieldId = 135,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 136,
                            FieldId = 136,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 137,
                            FieldId = 137,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 138,
                            FieldId = 138,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 139,
                            FieldId = 139,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 140,
                            FieldId = 140,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 141,
                            FieldId = 141,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 142,
                            FieldId = 142,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 143,
                            FieldId = 143,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 144,
                            FieldId = 144,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 145,
                            FieldId = 145,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 146,
                            FieldId = 146,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 147,
                            FieldId = 147,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 148,
                            FieldId = 148,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 149,
                            FieldId = 149,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 150,
                            FieldId = 150,
                            ServiceId = 15
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "permissions",
                            ClaimValue = "Account_Mangment",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "permissions",
                            ClaimValue = "admin.create_response",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "permissions",
                            ClaimValue = "auth.admin.login",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "permissions",
                            ClaimValue = "auth.admin.register",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "permissions",
                            ClaimValue = "auth.admin.resend_confirm_email",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "permissions",
                            ClaimValue = "services.view_all",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "permissions",
                            ClaimValue = "services.create",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "permissions",
                            ClaimValue = "services.update",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "permissions",
                            ClaimValue = "services.toggle_availability",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "permissions",
                            ClaimValue = "users:read",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "permissions",
                            ClaimValue = "users:add",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "permissions",
                            ClaimValue = "users:update",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "permissions",
                            ClaimValue = "roles:read",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "permissions",
                            ClaimValue = "roles:add",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "permissions",
                            ClaimValue = "roles:update",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "permissions",
                            ClaimValue = "results:read",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "01954439-8011-7cca-9a77-c5c56990be36",
                            RoleId = "01954439-8011-7cca-9a77-c5bf8fae0bae"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Government.Entities.AdminResponse", b =>
                {
                    b.HasOne("Government.Entities.Request", "Request")
                        .WithOne("AdminResponse")
                        .HasForeignKey("Government.Entities.AdminResponse", "RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Government.Entities.AppUser", "user")
                        .WithMany("AdminResponses")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Request");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Government.Entities.AttachedDocument", b =>
                {
                    b.HasOne("Government.Entities.Request", "Request")
                        .WithMany("AttachedDocuments")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Government.Entities.Payment", b =>
                {
                    b.HasOne("Government.Entities.Request", "Request")
                        .WithMany("Payments")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Government.Entities.Request", b =>
                {
                    b.HasOne("Government.Entities.Service", "service")
                        .WithMany("Requests")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Government.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("service");
                });

            modelBuilder.Entity("Government.Entities.RequiredDocument", b =>
                {
                    b.HasOne("Government.Entities.Service", "Service")
                        .WithMany("RequiredDocuments")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Government.Entities.ServiceData", b =>
                {
                    b.HasOne("Government.Entities.Field", "Field")
                        .WithMany("ServiceData")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Government.Entities.Request", "Request")
                        .WithMany("serviceData")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Government.Entities.ServiceField", b =>
                {
                    b.HasOne("Government.Entities.Field", "Field")
                        .WithMany("ServiceFields")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Government.Entities.Service", "service")
                        .WithMany("ServiceFields")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("service");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Government.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Government.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Government.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Government.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Government.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Government.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Government.Entities.AppUser", b =>
                {
                    b.Navigation("AdminResponses");
                });

            modelBuilder.Entity("Government.Entities.Field", b =>
                {
                    b.Navigation("ServiceData");

                    b.Navigation("ServiceFields");
                });

            modelBuilder.Entity("Government.Entities.Request", b =>
                {
                    b.Navigation("AdminResponse")
                        .IsRequired();

                    b.Navigation("AttachedDocuments");

                    b.Navigation("Payments");

                    b.Navigation("serviceData");
                });

            modelBuilder.Entity("Government.Entities.Service", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("RequiredDocuments");

                    b.Navigation("ServiceFields");
                });
#pragma warning restore 612, 618
        }
    }
}
